//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace api.schoolbase.entities.DBBase
{
    
    public partial class _DBBase
    {
        public static @__api.schoolbase.entities.DBBase.Entity.App_Calendars_Columns App_Calendars = new @__api.schoolbase.entities.DBBase.Entity.App_Calendars_Columns();
    }
    namespace @__api.schoolbase.entities.DBBase.Entity
    {
        public class App_Calendars_Columns : MyLib.DbAccess.SQL.IQueryTable
        {
            private const string ___TABLE_NAME = "App_Calendars";
            private string ___aliasName;
            public App_Calendars_Columns(string aliasName) : base("DBBase") { this.___aliasName = aliasName; }
            public App_Calendars_Columns() : base("DBBase") { this.___aliasName = ___TABLE_NAME; }
    
        #region Table Columns
    
    		private static MyLib.DbAccess.SQL.QueryColumn _Id = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".Id"), DbType.Int32);
            public MyLib.DbAccess.SQL.QueryColumn Id
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _Id;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".Id"), DbType.Int32);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _Subject = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".Subject"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn Subject
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _Subject;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".Subject"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _Location = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".Location"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn Location
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _Location;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".Location"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _MasterId = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".MasterId"), DbType.Double);
            public MyLib.DbAccess.SQL.QueryColumn MasterId
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _MasterId;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".MasterId"), DbType.Double);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _Description = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".Description"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn Description
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _Description;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".Description"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _CalendarType = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".CalendarType"), DbType.Int32);
            public MyLib.DbAccess.SQL.QueryColumn CalendarType
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _CalendarType;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".CalendarType"), DbType.Int32);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _StartTime = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".StartTime"), DbType.DateTime);
            public MyLib.DbAccess.SQL.QueryColumn StartTime
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _StartTime;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".StartTime"), DbType.DateTime);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _EndTime = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".EndTime"), DbType.DateTime);
            public MyLib.DbAccess.SQL.QueryColumn EndTime
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _EndTime;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".EndTime"), DbType.DateTime);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _IsAllDayEvent = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".IsAllDayEvent"), DbType.Boolean);
            public MyLib.DbAccess.SQL.QueryColumn IsAllDayEvent
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _IsAllDayEvent;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".IsAllDayEvent"), DbType.Boolean);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _HasAttachment = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".HasAttachment"), DbType.Boolean);
            public MyLib.DbAccess.SQL.QueryColumn HasAttachment
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _HasAttachment;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".HasAttachment"), DbType.Boolean);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _Category = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".Category"), DbType.Int32);
            public MyLib.DbAccess.SQL.QueryColumn Category
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _Category;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".Category"), DbType.Int32);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _InstanceType = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".InstanceType"), DbType.Int32);
            public MyLib.DbAccess.SQL.QueryColumn InstanceType
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _InstanceType;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".InstanceType"), DbType.Int32);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _Attendees = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".Attendees"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn Attendees
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _Attendees;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".Attendees"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _AttendeeNames = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".AttendeeNames"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn AttendeeNames
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _AttendeeNames;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".AttendeeNames"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _OtherAttendee = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".OtherAttendee"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn OtherAttendee
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _OtherAttendee;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".OtherAttendee"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _UPAccount = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".UPAccount"), DbType.Int64);
            public MyLib.DbAccess.SQL.QueryColumn UPAccount
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _UPAccount;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".UPAccount"), DbType.Int64);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _UPName = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".UPName"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn UPName
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _UPName;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".UPName"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _UPTime = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".UPTime"), DbType.DateTime);
            public MyLib.DbAccess.SQL.QueryColumn UPTime
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _UPTime;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".UPTime"), DbType.DateTime);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _RecurringRule = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".RecurringRule"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn RecurringRule
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _RecurringRule;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".RecurringRule"), DbType.String);
                }
            }

        #endregion

                
            public override string ___GetTableName() { return ___TABLE_NAME; }
    		public override string ___GetAliasName() { return ___aliasName ?? ___TABLE_NAME; }
    		        public override IEnumerable<MyLib.DbAccess.SQL.QueryColumn> ___GetAutoIncrementColumn() { return new MyLib.DbAccess.SQL.QueryColumn[]{_Id}; }
    				        public override MyLib.DbAccess.SQL.QueryColumn ___GetIdentityColumn() { return _Id; }
            		public @__api.schoolbase.entities.DBBase.Entity.App_Calendars_Columns @__Alias(string aliasName) { return new @__api.schoolbase.entities.DBBase.Entity.App_Calendars_Columns(aliasName); }
        }
    }
    [System.Serializable]
    public partial class App_Calendars
    {
        #region Property
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual string Subject
        {
            get;
            set;
        }
    
        public virtual string Location
        {
            get;
            set;
        }
    
        public virtual double MasterId
        {
            get;
            set;
        }
    
        public virtual string Description
        {
            get;
            set;
        }
    
        public virtual int CalendarType
        {
            get;
            set;
        }
    
        public virtual System.DateTime StartTime
        {
            get { return _startTime; }
            set { 
    			if (value.Kind == DateTimeKind.Unspecified) {
    			_startTime = DateTime.SpecifyKind(value, DateTimeKind.Utc);
    			} else {
    				_startTime = value;
    			}
    			}
        }
        private System.DateTime _startTime;
    
        public virtual System.DateTime EndTime
        {
            get { return _endTime; }
            set { 
    			if (value.Kind == DateTimeKind.Unspecified) {
    			_endTime = DateTime.SpecifyKind(value, DateTimeKind.Utc);
    			} else {
    				_endTime = value;
    			}
    			}
        }
        private System.DateTime _endTime;
    
        public virtual bool IsAllDayEvent
        {
            get;
            set;
        }
    
        public virtual bool HasAttachment
        {
            get;
            set;
        }
    
        public virtual int Category
        {
            get;
            set;
        }
    
        public virtual int InstanceType
        {
            get;
            set;
        }
    
        public virtual string Attendees
        {
            get;
            set;
        }
    
        public virtual string AttendeeNames
        {
            get;
            set;
        }
    
        public virtual string OtherAttendee
        {
            get;
            set;
        }
    
        public virtual long UPAccount
        {
            get;
            set;
        }
    
        public virtual string UPName
        {
            get;
            set;
        }
    
        public virtual System.DateTime UPTime
        {
            get { return _uPTime; }
            set { 
    			if (value.Kind == DateTimeKind.Unspecified) {
    			_uPTime = DateTime.SpecifyKind(value, DateTimeKind.Utc);
    			} else {
    				_uPTime = value;
    			}
    			}
        }
        private System.DateTime _uPTime;
    
        public virtual string RecurringRule
        {
            get;
            set;
        }

        #endregion

    }
}
