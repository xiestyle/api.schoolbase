//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace api.schoolbase.entities.DBBase
{
    
    public partial class _DBBase
    {
        public static @__api.schoolbase.entities.DBBase.Entity.tFolder_Columns tFolder = new @__api.schoolbase.entities.DBBase.Entity.tFolder_Columns();
    }
    namespace @__api.schoolbase.entities.DBBase.Entity
    {
        public class tFolder_Columns : MyLib.DbAccess.SQL.IQueryTable
        {
            private const string ___TABLE_NAME = "tFolder";
            private string ___aliasName;
            public tFolder_Columns(string aliasName) : base("DBBase") { this.___aliasName = aliasName; }
            public tFolder_Columns() : base("DBBase") { this.___aliasName = ___TABLE_NAME; }
    
        #region Table Columns
    
    		private static MyLib.DbAccess.SQL.QueryColumn _folder_id = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".folder_id"), DbType.Int32);
            public MyLib.DbAccess.SQL.QueryColumn folder_id
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _folder_id;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".folder_id"), DbType.Int32);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _folder_uuid = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".folder_uuid"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn folder_uuid
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _folder_uuid;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".folder_uuid"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _parent_uuid = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".parent_uuid"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn parent_uuid
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _parent_uuid;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".parent_uuid"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _folder_name = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".folder_name"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn folder_name
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _folder_name;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".folder_name"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _folder_descp = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".folder_descp"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn folder_descp
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _folder_descp;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".folder_descp"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _folder_type = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".folder_type"), DbType.Int32);
            public MyLib.DbAccess.SQL.QueryColumn folder_type
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _folder_type;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".folder_type"), DbType.Int32);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _folder_owner = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".folder_owner"), DbType.Int64);
            public MyLib.DbAccess.SQL.QueryColumn folder_owner
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _folder_owner;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".folder_owner"), DbType.Int64);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _folder_creator = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".folder_creator"), DbType.Int64);
            public MyLib.DbAccess.SQL.QueryColumn folder_creator
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _folder_creator;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".folder_creator"), DbType.Int64);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _create_time = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".create_time"), DbType.DateTime);
            public MyLib.DbAccess.SQL.QueryColumn create_time
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _create_time;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".create_time"), DbType.DateTime);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _modify_time = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".modify_time"), DbType.DateTime);
            public MyLib.DbAccess.SQL.QueryColumn modify_time
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _modify_time;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".modify_time"), DbType.DateTime);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _valid = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".valid"), DbType.Boolean);
            public MyLib.DbAccess.SQL.QueryColumn valid
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _valid;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".valid"), DbType.Boolean);
                }
            }

        #endregion

                
            public override string ___GetTableName() { return ___TABLE_NAME; }
    		public override string ___GetAliasName() { return ___aliasName ?? ___TABLE_NAME; }
    		        public override IEnumerable<MyLib.DbAccess.SQL.QueryColumn> ___GetAutoIncrementColumn() { return new MyLib.DbAccess.SQL.QueryColumn[]{_folder_id}; }
    				        public override MyLib.DbAccess.SQL.QueryColumn ___GetIdentityColumn() { return _folder_id; }
            		public @__api.schoolbase.entities.DBBase.Entity.tFolder_Columns @__Alias(string aliasName) { return new @__api.schoolbase.entities.DBBase.Entity.tFolder_Columns(aliasName); }
        }
    }
    [System.Serializable]
    public partial class tFolder
    {
        #region Property
    
        public virtual int folder_id
        {
            get;
            set;
        }
    
        public virtual string folder_uuid
        {
            get;
            set;
        }
    
        public virtual string parent_uuid
        {
            get;
            set;
        }
    
        public virtual string folder_name
        {
            get;
            set;
        }
    
        public virtual string folder_descp
        {
            get;
            set;
        }
    
        public virtual Nullable<int> folder_type
        {
            get;
            set;
        }
    
        public virtual Nullable<long> folder_owner
        {
            get;
            set;
        }
    
        public virtual Nullable<long> folder_creator
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> create_time
        {
            get { return _create_time; }
            set { 
    			if (value != null){
    				if (value.Value.Kind == DateTimeKind.Unspecified) {
    					_create_time = DateTime.SpecifyKind(value.Value, DateTimeKind.Utc);
    				} else {
    					_create_time = value;
    				}
    			}
    			else 		_create_time = value; 
    	}
        }
        private Nullable<System.DateTime> _create_time;
    
        public virtual Nullable<System.DateTime> modify_time
        {
            get { return _modify_time; }
            set { 
    			if (value != null){
    				if (value.Value.Kind == DateTimeKind.Unspecified) {
    					_modify_time = DateTime.SpecifyKind(value.Value, DateTimeKind.Utc);
    				} else {
    					_modify_time = value;
    				}
    			}
    			else 		_modify_time = value; 
    	}
        }
        private Nullable<System.DateTime> _modify_time;
    
        public virtual Nullable<bool> valid
        {
            get;
            set;
        }

        #endregion

    }
}
