//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace api.schoolbase.entities.DBBase
{
    
    public partial class _DBBase
    {
        public static @__api.schoolbase.entities.DBBase.Entity.Base_DepInfo_Columns Base_DepInfo = new @__api.schoolbase.entities.DBBase.Entity.Base_DepInfo_Columns();
    }
    namespace @__api.schoolbase.entities.DBBase.Entity
    {
        public class Base_DepInfo_Columns : MyLib.DbAccess.SQL.IQueryTable
        {
            private const string ___TABLE_NAME = "Base_DepInfo";
            private string ___aliasName;
            public Base_DepInfo_Columns(string aliasName) : base("DBBase") { this.___aliasName = aliasName; }
            public Base_DepInfo_Columns() : base("DBBase") { this.___aliasName = ___TABLE_NAME; }
    
        #region Table Columns
    
    		private static MyLib.DbAccess.SQL.QueryColumn _DepID = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".DepID"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn DepID
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _DepID;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".DepID"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _DepName = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".DepName"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn DepName
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _DepName;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".DepName"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _DepCode = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".DepCode"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn DepCode
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _DepCode;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".DepCode"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _NameEn = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".NameEn"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn NameEn
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _NameEn;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".NameEn"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _Addr = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".Addr"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn Addr
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _Addr;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".Addr"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _TypeCode = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".TypeCode"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn TypeCode
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _TypeCode;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".TypeCode"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _ZipCode = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".ZipCode"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn ZipCode
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _ZipCode;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".ZipCode"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _Tel = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".Tel"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn Tel
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _Tel;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".Tel"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _Fax = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".Fax"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn Fax
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _Fax;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".Fax"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _Email = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".Email"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn Email
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _Email;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".Email"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _WebHome = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".WebHome"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn WebHome
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _WebHome;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".WebHome"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _step = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".step"), DbType.Int32);
            public MyLib.DbAccess.SQL.QueryColumn step
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _step;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".step"), DbType.Int32);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _Desktop = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".Desktop"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn Desktop
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _Desktop;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".Desktop"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _DeskStyle = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".DeskStyle"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn DeskStyle
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _DeskStyle;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".DeskStyle"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _OrgCode = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".OrgCode"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn OrgCode
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _OrgCode;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".OrgCode"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _SchHistory = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".SchHistory"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn SchHistory
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _SchHistory;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".SchHistory"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _HPSerID = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".HPSerID"), DbType.Decimal);
            public MyLib.DbAccess.SQL.QueryColumn HPSerID
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _HPSerID;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".HPSerID"), DbType.Decimal);
                }
            }

        #endregion

                
            public override string ___GetTableName() { return ___TABLE_NAME; }
    		public override string ___GetAliasName() { return ___aliasName ?? ___TABLE_NAME; }
    				        public override MyLib.DbAccess.SQL.QueryColumn ___GetIdentityColumn() { return _DepID; }
            		public @__api.schoolbase.entities.DBBase.Entity.Base_DepInfo_Columns @__Alias(string aliasName) { return new @__api.schoolbase.entities.DBBase.Entity.Base_DepInfo_Columns(aliasName); }
        }
    }
    [System.Serializable]
    public partial class Base_DepInfo
    {
        #region Property
    
        public virtual string DepID
        {
            get;
            set;
        }
    
        public virtual string DepName
        {
            get;
            set;
        }
    
        public virtual string DepCode
        {
            get;
            set;
        }
    
        public virtual string NameEn
        {
            get;
            set;
        }
    
        public virtual string Addr
        {
            get;
            set;
        }
    
        public virtual string TypeCode
        {
            get;
            set;
        }
    
        public virtual string ZipCode
        {
            get;
            set;
        }
    
        public virtual string Tel
        {
            get;
            set;
        }
    
        public virtual string Fax
        {
            get;
            set;
        }
    
        public virtual string Email
        {
            get;
            set;
        }
    
        public virtual string WebHome
        {
            get;
            set;
        }
    
        public virtual Nullable<int> step
        {
            get;
            set;
        }
    
        public virtual string Desktop
        {
            get;
            set;
        }
    
        public virtual string DeskStyle
        {
            get;
            set;
        }
    
        public virtual string OrgCode
        {
            get;
            set;
        }
    
        public virtual string SchHistory
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> HPSerID
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual ICollection<Base_DepPlug> Base_DepPlug
        {
            get
            {
                if (_base_DepPlug == null)
                {
                    var newCollection = new MyLib.DAO.FixupCollection<Base_DepPlug>();
                    newCollection.CollectionChanged += FixupBase_DepPlug;
                    _base_DepPlug = newCollection;
                }
                return _base_DepPlug;
            }
            set
            {
                if (!ReferenceEquals(_base_DepPlug, value))
                {
                    var previousValue = _base_DepPlug as MyLib.DAO.FixupCollection<Base_DepPlug>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupBase_DepPlug;
                    }
                    _base_DepPlug = value;
                    var newValue = value as MyLib.DAO.FixupCollection<Base_DepPlug>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupBase_DepPlug;
                    }
                }
            }
        }
        private ICollection<Base_DepPlug> _base_DepPlug;

        #endregion

        #region Association Fixup
    
        private void FixupBase_DepPlug(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Base_DepPlug item in e.NewItems)
                {
                    item.Base_DepInfo = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Base_DepPlug item in e.OldItems)
                {
                    if (ReferenceEquals(item.Base_DepInfo, this))
                    {
                        item.Base_DepInfo = null;
                    }
                }
            }
        }

        #endregion

    }
}
