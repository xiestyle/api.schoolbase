//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace api.schoolbase.entities.DBBase
{
    
    public partial class _DBBase
    {
        public static @__api.schoolbase.entities.DBBase.Entity.Base_Config_Columns Base_Config = new @__api.schoolbase.entities.DBBase.Entity.Base_Config_Columns();
    }
    namespace @__api.schoolbase.entities.DBBase.Entity
    {
        public class Base_Config_Columns : MyLib.DbAccess.SQL.IQueryTable
        {
            private const string ___TABLE_NAME = "Base_Config";
            private string ___aliasName;
            public Base_Config_Columns(string aliasName) : base("DBBase") { this.___aliasName = aliasName; }
            public Base_Config_Columns() : base("DBBase") { this.___aliasName = ___TABLE_NAME; }
    
        #region Table Columns
    
    		private static MyLib.DbAccess.SQL.QueryColumn _DepID = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".DepID"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn DepID
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _DepID;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".DepID"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _HostAndPort = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".HostAndPort"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn HostAndPort
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _HostAndPort;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".HostAndPort"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _Title = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".Title"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn Title
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _Title;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".Title"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _TemplateName = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".TemplateName"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn TemplateName
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _TemplateName;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".TemplateName"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _Copyright = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".Copyright"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn Copyright
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _Copyright;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".Copyright"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _Blocking = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".Blocking"), DbType.Byte);
            public MyLib.DbAccess.SQL.QueryColumn Blocking
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _Blocking;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".Blocking"), DbType.Byte);
                }
            }

        #endregion

                
            public override string ___GetTableName() { return ___TABLE_NAME; }
    		public override string ___GetAliasName() { return ___aliasName ?? ___TABLE_NAME; }
    				        public override MyLib.DbAccess.SQL.QueryColumn ___GetIdentityColumn() { return _HostAndPort; }
            		public @__api.schoolbase.entities.DBBase.Entity.Base_Config_Columns @__Alias(string aliasName) { return new @__api.schoolbase.entities.DBBase.Entity.Base_Config_Columns(aliasName); }
        }
    }
    [System.Serializable]
    public partial class Base_Config
    {
        #region Property
    
        public virtual string DepID
        {
            get;
            set;
        }
    
        public virtual string HostAndPort
        {
            get;
            set;
        }
    
        public virtual string Title
        {
            get;
            set;
        }
    
        public virtual string TemplateName
        {
            get;
            set;
        }
    
        public virtual string Copyright
        {
            get;
            set;
        }
    
        public virtual byte Blocking
        {
            get;
            set;
        }

        #endregion

    }
}
