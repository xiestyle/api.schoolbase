//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace api.schoolbase.entities.DBBase
{
    
    public partial class _DBBase
    {
        public static @__api.schoolbase.entities.DBBase.Entity.Base_GroupPlug_Columns Base_GroupPlug = new @__api.schoolbase.entities.DBBase.Entity.Base_GroupPlug_Columns();
    }
    namespace @__api.schoolbase.entities.DBBase.Entity
    {
        public class Base_GroupPlug_Columns : MyLib.DbAccess.SQL.IQueryTable
        {
            private const string ___TABLE_NAME = "Base_GroupPlug";
            private string ___aliasName;
            public Base_GroupPlug_Columns(string aliasName) : base("DBBase") { this.___aliasName = aliasName; }
            public Base_GroupPlug_Columns() : base("DBBase") { this.___aliasName = ___TABLE_NAME; }
    
        #region Table Columns
    
    		private static MyLib.DbAccess.SQL.QueryColumn _DepID = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".DepID"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn DepID
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _DepID;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".DepID"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _GroupID = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".GroupID"), DbType.Int64);
            public MyLib.DbAccess.SQL.QueryColumn GroupID
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _GroupID;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".GroupID"), DbType.Int64);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _PlugID = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".PlugID"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn PlugID
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _PlugID;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".PlugID"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _Permission = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".Permission"), DbType.Int64);
            public MyLib.DbAccess.SQL.QueryColumn Permission
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _Permission;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".Permission"), DbType.Int64);
                }
            }

        #endregion

                
            public override string ___GetTableName() { return ___TABLE_NAME; }
    		public override string ___GetAliasName() { return ___aliasName ?? ___TABLE_NAME; }
    				        public override MyLib.DbAccess.SQL.QueryColumn ___GetIdentityColumn() { return _DepID; }
            		public @__api.schoolbase.entities.DBBase.Entity.Base_GroupPlug_Columns @__Alias(string aliasName) { return new @__api.schoolbase.entities.DBBase.Entity.Base_GroupPlug_Columns(aliasName); }
        }
    }
    [System.Serializable]
    public partial class Base_GroupPlug
    {
        #region Property
    
        public virtual string DepID
        {
            get;
            set;
        }
    
        public virtual long GroupID
        {
            get { return _groupID; }
            set
            {
                if (_groupID != value)
                {
                    if (Base_Group != null && Base_Group.SERID != value)
                    {
                        Base_Group = null;
                    }
                    _groupID = value;
                }
            }
        }
        private long _groupID;
    
        public virtual string PlugID
        {
            get { return _plugID; }
            set
            {
                if (_plugID != value)
                {
                    if (Base_Plug != null && Base_Plug.PlugID != value)
                    {
                        Base_Plug = null;
                    }
                    _plugID = value;
                }
            }
        }
        private string _plugID;
    
        public virtual long Permission
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual Base_Group Base_Group
        {
            get { return _base_Group; }
            set
            {
                if (!ReferenceEquals(_base_Group, value))
                {
                    var previousValue = _base_Group;
                    _base_Group = value;
                    FixupBase_Group(previousValue);
                }
            }
        }
        private Base_Group _base_Group;
    
        public virtual Base_Plug Base_Plug
        {
            get { return _base_Plug; }
            set
            {
                if (!ReferenceEquals(_base_Plug, value))
                {
                    var previousValue = _base_Plug;
                    _base_Plug = value;
                    FixupBase_Plug(previousValue);
                }
            }
        }
        private Base_Plug _base_Plug;

        #endregion

        #region Association Fixup
    
        private void FixupBase_Group(Base_Group previousValue)
        {
            if (previousValue != null && previousValue.Base_GroupPlug.Contains(this))
            {
                previousValue.Base_GroupPlug.Remove(this);
            }
    
            if (Base_Group != null)
            {
                if (!Base_Group.Base_GroupPlug.Contains(this))
                {
                    Base_Group.Base_GroupPlug.Add(this);
                }
                if (GroupID != Base_Group.SERID)
                {
                    GroupID = Base_Group.SERID;
                }
            }
        }
    
        private void FixupBase_Plug(Base_Plug previousValue)
        {
            if (previousValue != null && previousValue.Base_GroupPlug.Contains(this))
            {
                previousValue.Base_GroupPlug.Remove(this);
            }
    
            if (Base_Plug != null)
            {
                if (!Base_Plug.Base_GroupPlug.Contains(this))
                {
                    Base_Plug.Base_GroupPlug.Add(this);
                }
                if (PlugID != Base_Plug.PlugID)
                {
                    PlugID = Base_Plug.PlugID;
                }
            }
        }

        #endregion

    }
}
