//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace api.schoolbase.entities.DBBase
{
    
    public partial class _DBBase
    {
        public static @__api.schoolbase.entities.DBBase.Entity.app_version_Columns app_version = new @__api.schoolbase.entities.DBBase.Entity.app_version_Columns();
    }
    namespace @__api.schoolbase.entities.DBBase.Entity
    {
        public class app_version_Columns : MyLib.DbAccess.SQL.IQueryTable
        {
            private const string ___TABLE_NAME = "app_version";
            private string ___aliasName;
            public app_version_Columns(string aliasName) : base("DBBase") { this.___aliasName = aliasName; }
            public app_version_Columns() : base("DBBase") { this.___aliasName = ___TABLE_NAME; }
    
        #region Table Columns
    
    		private static MyLib.DbAccess.SQL.QueryColumn _id = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".id"), DbType.Int32);
            public MyLib.DbAccess.SQL.QueryColumn id
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _id;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".id"), DbType.Int32);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _appid = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".appid"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn appid
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _appid;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".appid"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _os = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".os"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn os
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _os;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".os"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _vcode = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".vcode"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn vcode
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _vcode;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".vcode"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _filesize = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".filesize"), DbType.Int32);
            public MyLib.DbAccess.SQL.QueryColumn filesize
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _filesize;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".filesize"), DbType.Int32);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _dtime = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".dtime"), DbType.DateTime);
            public MyLib.DbAccess.SQL.QueryColumn dtime
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _dtime;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".dtime"), DbType.DateTime);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _appdesc = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".appdesc"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn appdesc
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _appdesc;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".appdesc"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _fileurl = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".fileurl"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn fileurl
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _fileurl;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".fileurl"), DbType.String);
                }
            }

        #endregion

                
            public override string ___GetTableName() { return ___TABLE_NAME; }
    		public override string ___GetAliasName() { return ___aliasName ?? ___TABLE_NAME; }
    		        public override IEnumerable<MyLib.DbAccess.SQL.QueryColumn> ___GetAutoIncrementColumn() { return new MyLib.DbAccess.SQL.QueryColumn[]{_id}; }
    				        public override MyLib.DbAccess.SQL.QueryColumn ___GetIdentityColumn() { return _id; }
            		public @__api.schoolbase.entities.DBBase.Entity.app_version_Columns @__Alias(string aliasName) { return new @__api.schoolbase.entities.DBBase.Entity.app_version_Columns(aliasName); }
        }
    }
    [System.Serializable]
    public partial class app_version
    {
        #region Property
    
        public virtual int id
        {
            get;
            set;
        }
    
        public virtual string appid
        {
            get { return _appid; }
            set
            {
                if (_appid != value)
                {
                    if (WxApplication != null && WxApplication.appid != value)
                    {
                        WxApplication = null;
                    }
                    _appid = value;
                }
            }
        }
        private string _appid;
    
        public virtual string os
        {
            get;
            set;
        }
    
        public virtual string vcode
        {
            get;
            set;
        }
    
        public virtual int filesize
        {
            get;
            set;
        }
    
        public virtual System.DateTime dtime
        {
            get { return _dtime; }
            set { 
    			if (value.Kind == DateTimeKind.Unspecified) {
    			_dtime = DateTime.SpecifyKind(value, DateTimeKind.Utc);
    			} else {
    				_dtime = value;
    			}
    			}
        }
        private System.DateTime _dtime;
    
        public virtual string appdesc
        {
            get;
            set;
        }
    
        public virtual string fileurl
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual WxApplication WxApplication
        {
            get { return _wxApplication; }
            set
            {
                if (!ReferenceEquals(_wxApplication, value))
                {
                    var previousValue = _wxApplication;
                    _wxApplication = value;
                    FixupWxApplication(previousValue);
                }
            }
        }
        private WxApplication _wxApplication;

        #endregion

        #region Association Fixup
    
        private void FixupWxApplication(WxApplication previousValue)
        {
            if (previousValue != null && previousValue.app_version.Contains(this))
            {
                previousValue.app_version.Remove(this);
            }
    
            if (WxApplication != null)
            {
                if (!WxApplication.app_version.Contains(this))
                {
                    WxApplication.app_version.Add(this);
                }
                if (appid != WxApplication.appid)
                {
                    appid = WxApplication.appid;
                }
            }
        }

        #endregion

    }
}
