//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace api.schoolbase.entities.DBBase
{
    
    public partial class _DBBase
    {
        public static @__api.schoolbase.entities.DBBase.Entity.Base_VPlugSet_Columns Base_VPlugSet = new @__api.schoolbase.entities.DBBase.Entity.Base_VPlugSet_Columns();
    }
    namespace @__api.schoolbase.entities.DBBase.Entity
    {
        public class Base_VPlugSet_Columns : MyLib.DbAccess.SQL.IQueryTable
        {
            private const string ___TABLE_NAME = "Base_VPlugSet";
            private string ___aliasName;
            public Base_VPlugSet_Columns(string aliasName) : base("DBBase") { this.___aliasName = aliasName; }
            public Base_VPlugSet_Columns() : base("DBBase") { this.___aliasName = ___TABLE_NAME; }
    
        #region Table Columns
    
    		private static MyLib.DbAccess.SQL.QueryColumn _PlugID = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".PlugID"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn PlugID
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _PlugID;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".PlugID"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _PName = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".PName"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn PName
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _PName;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".PName"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _PUrl = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".PUrl"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn PUrl
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _PUrl;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".PUrl"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _UID = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".UID"), DbType.Int64);
            public MyLib.DbAccess.SQL.QueryColumn UID
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _UID;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".UID"), DbType.Int64);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _ParentID = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".ParentID"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn ParentID
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _ParentID;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".ParentID"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _DskType = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".DskType"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn DskType
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _DskType;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".DskType"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _SortID = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".SortID"), DbType.Int64);
            public MyLib.DbAccess.SQL.QueryColumn SortID
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _SortID;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".SortID"), DbType.Int64);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _IsUse = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".IsUse"), DbType.Byte);
            public MyLib.DbAccess.SQL.QueryColumn IsUse
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _IsUse;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".IsUse"), DbType.Byte);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _PIcon = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".PIcon"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn PIcon
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _PIcon;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".PIcon"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _PDes = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".PDes"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn PDes
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _PDes;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".PDes"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _IsStop = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".IsStop"), DbType.Byte);
            public MyLib.DbAccess.SQL.QueryColumn IsStop
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _IsStop;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".IsStop"), DbType.Byte);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _PIndex = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".PIndex"), DbType.Decimal);
            public MyLib.DbAccess.SQL.QueryColumn PIndex
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _PIndex;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".PIndex"), DbType.Decimal);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _ChildrenNum = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".ChildrenNum"), DbType.Byte);
            public MyLib.DbAccess.SQL.QueryColumn ChildrenNum
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _ChildrenNum;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".ChildrenNum"), DbType.Byte);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _Depth = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".Depth"), DbType.Byte);
            public MyLib.DbAccess.SQL.QueryColumn Depth
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _Depth;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".Depth"), DbType.Byte);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _OpenType = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".OpenType"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn OpenType
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _OpenType;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".OpenType"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _SortName = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".SortName"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn SortName
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _SortName;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".SortName"), DbType.String);
                }
            }

        #endregion

                
            public override string ___GetTableName() { return ___TABLE_NAME; }
    		public override string ___GetAliasName() { return ___aliasName ?? ___TABLE_NAME; }
    				        public override MyLib.DbAccess.SQL.QueryColumn ___GetIdentityColumn() { return _PlugID; }
            		public @__api.schoolbase.entities.DBBase.Entity.Base_VPlugSet_Columns @__Alias(string aliasName) { return new @__api.schoolbase.entities.DBBase.Entity.Base_VPlugSet_Columns(aliasName); }
        }
    }
    [System.Serializable]
    public partial class Base_VPlugSet
    {
        #region Property
    
        public virtual string PlugID
        {
            get;
            set;
        }
    
        public virtual string PName
        {
            get;
            set;
        }
    
        public virtual string PUrl
        {
            get;
            set;
        }
    
        public virtual long UID
        {
            get;
            set;
        }
    
        public virtual string ParentID
        {
            get;
            set;
        }
    
        public virtual string DskType
        {
            get;
            set;
        }
    
        public virtual long SortID
        {
            get;
            set;
        }
    
        public virtual byte IsUse
        {
            get;
            set;
        }
    
        public virtual string PIcon
        {
            get;
            set;
        }
    
        public virtual string PDes
        {
            get;
            set;
        }
    
        public virtual byte IsStop
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> PIndex
        {
            get;
            set;
        }
    
        public virtual byte ChildrenNum
        {
            get;
            set;
        }
    
        public virtual byte Depth
        {
            get;
            set;
        }
    
        public virtual string OpenType
        {
            get;
            set;
        }
    
        public virtual string SortName
        {
            get;
            set;
        }

        #endregion

    }
}
