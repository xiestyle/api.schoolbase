//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace api.schoolbase.entities.DBBase
{
    
    public partial class _DBBase
    {
        public static @__api.schoolbase.entities.DBBase.Entity.WxApplication_Columns WxApplication = new @__api.schoolbase.entities.DBBase.Entity.WxApplication_Columns();
    }
    namespace @__api.schoolbase.entities.DBBase.Entity
    {
        public class WxApplication_Columns : MyLib.DbAccess.SQL.IQueryTable
        {
            private const string ___TABLE_NAME = "WxApplication";
            private string ___aliasName;
            public WxApplication_Columns(string aliasName) : base("DBBase") { this.___aliasName = aliasName; }
            public WxApplication_Columns() : base("DBBase") { this.___aliasName = ___TABLE_NAME; }
    
        #region Table Columns
    
    		private static MyLib.DbAccess.SQL.QueryColumn _appid = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".appid"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn appid
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _appid;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".appid"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _appname = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".appname"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn appname
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _appname;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".appname"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _appdesc = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".appdesc"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn appdesc
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _appdesc;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".appdesc"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _appicon = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".appicon"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn appicon
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _appicon;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".appicon"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _dtime = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".dtime"), DbType.DateTime);
            public MyLib.DbAccess.SQL.QueryColumn dtime
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _dtime;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".dtime"), DbType.DateTime);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _vsupport = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".vsupport"), DbType.Int32);
            public MyLib.DbAccess.SQL.QueryColumn vsupport
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _vsupport;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".vsupport"), DbType.Int32);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _state = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".state"), DbType.Int32);
            public MyLib.DbAccess.SQL.QueryColumn state
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _state;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".state"), DbType.Int32);
                }
            }

        #endregion

                
            public override string ___GetTableName() { return ___TABLE_NAME; }
    		public override string ___GetAliasName() { return ___aliasName ?? ___TABLE_NAME; }
    				        public override MyLib.DbAccess.SQL.QueryColumn ___GetIdentityColumn() { return _appid; }
            		public @__api.schoolbase.entities.DBBase.Entity.WxApplication_Columns @__Alias(string aliasName) { return new @__api.schoolbase.entities.DBBase.Entity.WxApplication_Columns(aliasName); }
        }
    }
    [System.Serializable]
    public partial class WxApplication
    {
        #region Property
    
        public virtual string appid
        {
            get;
            set;
        }
    
        public virtual string appname
        {
            get;
            set;
        }
    
        public virtual string appdesc
        {
            get;
            set;
        }
    
        public virtual string appicon
        {
            get;
            set;
        }
    
        public virtual System.DateTime dtime
        {
            get { return _dtime; }
            set { 
    			if (value.Kind == DateTimeKind.Unspecified) {
    			_dtime = DateTime.SpecifyKind(value, DateTimeKind.Utc);
    			} else {
    				_dtime = value;
    			}
    			}
        }
        private System.DateTime _dtime;
    
        public virtual int vsupport
        {
            get;
            set;
        }
    
        public virtual int state
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual ICollection<app_version> app_version
        {
            get
            {
                if (_app_version == null)
                {
                    var newCollection = new MyLib.DAO.FixupCollection<app_version>();
                    newCollection.CollectionChanged += Fixupapp_version;
                    _app_version = newCollection;
                }
                return _app_version;
            }
            set
            {
                if (!ReferenceEquals(_app_version, value))
                {
                    var previousValue = _app_version as MyLib.DAO.FixupCollection<app_version>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupapp_version;
                    }
                    _app_version = value;
                    var newValue = value as MyLib.DAO.FixupCollection<app_version>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupapp_version;
                    }
                }
            }
        }
        private ICollection<app_version> _app_version;
    
        public virtual ICollection<WxAppKey> WxAppKey
        {
            get
            {
                if (_wxAppKey == null)
                {
                    var newCollection = new MyLib.DAO.FixupCollection<WxAppKey>();
                    newCollection.CollectionChanged += FixupWxAppKey;
                    _wxAppKey = newCollection;
                }
                return _wxAppKey;
            }
            set
            {
                if (!ReferenceEquals(_wxAppKey, value))
                {
                    var previousValue = _wxAppKey as MyLib.DAO.FixupCollection<WxAppKey>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupWxAppKey;
                    }
                    _wxAppKey = value;
                    var newValue = value as MyLib.DAO.FixupCollection<WxAppKey>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupWxAppKey;
                    }
                }
            }
        }
        private ICollection<WxAppKey> _wxAppKey;

        #endregion

        #region Association Fixup
    
        private void Fixupapp_version(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (app_version item in e.NewItems)
                {
                    item.WxApplication = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (app_version item in e.OldItems)
                {
                    if (ReferenceEquals(item.WxApplication, this))
                    {
                        item.WxApplication = null;
                    }
                }
            }
        }
    
        private void FixupWxAppKey(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (WxAppKey item in e.NewItems)
                {
                    item.WxApplication = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (WxAppKey item in e.OldItems)
                {
                    if (ReferenceEquals(item.WxApplication, this))
                    {
                        item.WxApplication = null;
                    }
                }
            }
        }

        #endregion

    }
}
