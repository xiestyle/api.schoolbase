//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace api.schoolbase.entities.DBBase
{
    
    public partial class _DBBase
    {
        public static @__api.schoolbase.entities.DBBase.Entity.Base_UpFiles_Columns Base_UpFiles = new @__api.schoolbase.entities.DBBase.Entity.Base_UpFiles_Columns();
    }
    namespace @__api.schoolbase.entities.DBBase.Entity
    {
        public class Base_UpFiles_Columns : MyLib.DbAccess.SQL.IQueryTable
        {
            private const string ___TABLE_NAME = "Base_UpFiles";
            private string ___aliasName;
            public Base_UpFiles_Columns(string aliasName) : base("DBBase") { this.___aliasName = aliasName; }
            public Base_UpFiles_Columns() : base("DBBase") { this.___aliasName = ___TABLE_NAME; }
    
        #region Table Columns
    
    		private static MyLib.DbAccess.SQL.QueryColumn _SERID = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".SERID"), DbType.Int64);
            public MyLib.DbAccess.SQL.QueryColumn SERID
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _SERID;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".SERID"), DbType.Int64);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _Guid = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".Guid"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn Guid
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _Guid;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".Guid"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _UploadKey = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".UploadKey"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn UploadKey
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _UploadKey;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".UploadKey"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _FilePath = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".FilePath"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn FilePath
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _FilePath;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".FilePath"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _FileSize = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".FileSize"), DbType.Int32);
            public MyLib.DbAccess.SQL.QueryColumn FileSize
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _FileSize;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".FileSize"), DbType.Int32);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _FileType = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".FileType"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn FileType
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _FileType;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".FileType"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _UID = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".UID"), DbType.Int64);
            public MyLib.DbAccess.SQL.QueryColumn UID
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _UID;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".UID"), DbType.Int64);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _UserName = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".UserName"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn UserName
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _UserName;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".UserName"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _FileServer = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".FileServer"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn FileServer
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _FileServer;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".FileServer"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _IsRemote = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".IsRemote"), DbType.Byte);
            public MyLib.DbAccess.SQL.QueryColumn IsRemote
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _IsRemote;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".IsRemote"), DbType.Byte);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _DTime = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".DTime"), DbType.DateTime);
            public MyLib.DbAccess.SQL.QueryColumn DTime
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _DTime;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".DTime"), DbType.DateTime);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _IP = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".IP"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn IP
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _IP;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".IP"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _ZT = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".ZT"), DbType.Byte);
            public MyLib.DbAccess.SQL.QueryColumn ZT
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _ZT;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".ZT"), DbType.Byte);
                }
            }

        #endregion

                
            public override string ___GetTableName() { return ___TABLE_NAME; }
    		public override string ___GetAliasName() { return ___aliasName ?? ___TABLE_NAME; }
    		        public override IEnumerable<MyLib.DbAccess.SQL.QueryColumn> ___GetAutoIncrementColumn() { return new MyLib.DbAccess.SQL.QueryColumn[]{_SERID}; }
    				        public override MyLib.DbAccess.SQL.QueryColumn ___GetIdentityColumn() { return _SERID; }
            		public @__api.schoolbase.entities.DBBase.Entity.Base_UpFiles_Columns @__Alias(string aliasName) { return new @__api.schoolbase.entities.DBBase.Entity.Base_UpFiles_Columns(aliasName); }
        }
    }
    [System.Serializable]
    public partial class Base_UpFiles
    {
        #region Property
    
        public virtual long SERID
        {
            get;
            set;
        }
    
        public virtual string Guid
        {
            get;
            set;
        }
    
        public virtual string UploadKey
        {
            get;
            set;
        }
    
        public virtual string FilePath
        {
            get;
            set;
        }
    
        public virtual Nullable<int> FileSize
        {
            get;
            set;
        }
    
        public virtual string FileType
        {
            get;
            set;
        }
    
        public virtual long UID
        {
            get;
            set;
        }
    
        public virtual string UserName
        {
            get;
            set;
        }
    
        public virtual string FileServer
        {
            get;
            set;
        }
    
        public virtual byte IsRemote
        {
            get;
            set;
        }
    
        public virtual System.DateTime DTime
        {
            get { return _dTime; }
            set { 
    			if (value.Kind == DateTimeKind.Unspecified) {
    			_dTime = DateTime.SpecifyKind(value, DateTimeKind.Utc);
    			} else {
    				_dTime = value;
    			}
    			}
        }
        private System.DateTime _dTime;
    
        public virtual string IP
        {
            get;
            set;
        }
    
        public virtual byte ZT
        {
            get;
            set;
        }

        #endregion

    }
}
