//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace api.schoolbase.entities.DBZiyuan
{
    
    public partial class _DBZiyuan
    {
        public static @__api.schoolbase.entities.DBZiyuan.Entity.ZYK_Resource_Columns ZYK_Resource = new @__api.schoolbase.entities.DBZiyuan.Entity.ZYK_Resource_Columns();
    }
    namespace @__api.schoolbase.entities.DBZiyuan.Entity
    {
        public class ZYK_Resource_Columns : MyLib.DbAccess.SQL.IQueryTable
        {
            private const string ___TABLE_NAME = "ZYK_Resource";
            private string ___aliasName;
            public ZYK_Resource_Columns(string aliasName) : base("DBZiyuan") { this.___aliasName = aliasName; }
            public ZYK_Resource_Columns() : base("DBZiyuan") { this.___aliasName = ___TABLE_NAME; }
    
        #region Table Columns
    
    		private static MyLib.DbAccess.SQL.QueryColumn _SERID = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".SERID"), DbType.Int64);
            public MyLib.DbAccess.SQL.QueryColumn SERID
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _SERID;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".SERID"), DbType.Int64);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _SchSerID = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".SchSerID"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn SchSerID
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _SchSerID;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".SchSerID"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _UID = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".UID"), DbType.Int64);
            public MyLib.DbAccess.SQL.QueryColumn UID
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _UID;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".UID"), DbType.Int64);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _Dtime = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".Dtime"), DbType.DateTime);
            public MyLib.DbAccess.SQL.QueryColumn Dtime
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _Dtime;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".Dtime"), DbType.DateTime);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _FileID = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".FileID"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn FileID
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _FileID;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".FileID"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _ResType = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".ResType"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn ResType
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _ResType;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".ResType"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _FileType = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".FileType"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn FileType
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _FileType;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".FileType"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _FileSize = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".FileSize"), DbType.Int32);
            public MyLib.DbAccess.SQL.QueryColumn FileSize
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _FileSize;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".FileSize"), DbType.Int32);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _ResTitle = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".ResTitle"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn ResTitle
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _ResTitle;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".ResTitle"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _ResDes = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".ResDes"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn ResDes
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _ResDes;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".ResDes"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _NumView = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".NumView"), DbType.Int32);
            public MyLib.DbAccess.SQL.QueryColumn NumView
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _NumView;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".NumView"), DbType.Int32);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _NumUse = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".NumUse"), DbType.Int32);
            public MyLib.DbAccess.SQL.QueryColumn NumUse
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _NumUse;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".NumUse"), DbType.Int32);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _NumCollect = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".NumCollect"), DbType.Int32);
            public MyLib.DbAccess.SQL.QueryColumn NumCollect
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _NumCollect;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".NumCollect"), DbType.Int32);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _NumDownLoad = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".NumDownLoad"), DbType.Int32);
            public MyLib.DbAccess.SQL.QueryColumn NumDownLoad
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _NumDownLoad;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".NumDownLoad"), DbType.Int32);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _NumShare = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".NumShare"), DbType.Int32);
            public MyLib.DbAccess.SQL.QueryColumn NumShare
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _NumShare;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".NumShare"), DbType.Int32);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _NumScore = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".NumScore"), DbType.Int32);
            public MyLib.DbAccess.SQL.QueryColumn NumScore
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _NumScore;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".NumScore"), DbType.Int32);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _isPassed = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".isPassed"), DbType.Int32);
            public MyLib.DbAccess.SQL.QueryColumn isPassed
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _isPassed;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".isPassed"), DbType.Int32);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _isDeleted = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".isDeleted"), DbType.Boolean);
            public MyLib.DbAccess.SQL.QueryColumn isDeleted
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _isDeleted;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".isDeleted"), DbType.Boolean);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _isPush = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".isPush"), DbType.Int32);
            public MyLib.DbAccess.SQL.QueryColumn isPush
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _isPush;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".isPush"), DbType.Int32);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _TotalScore = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".TotalScore"), DbType.Int32);
            public MyLib.DbAccess.SQL.QueryColumn TotalScore
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _TotalScore;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".TotalScore"), DbType.Int32);
                }
            }

        #endregion

                
            public override string ___GetTableName() { return ___TABLE_NAME; }
    		public override string ___GetAliasName() { return ___aliasName ?? ___TABLE_NAME; }
    		        public override IEnumerable<MyLib.DbAccess.SQL.QueryColumn> ___GetAutoIncrementColumn() { return new MyLib.DbAccess.SQL.QueryColumn[]{_SERID}; }
    				        public override MyLib.DbAccess.SQL.QueryColumn ___GetIdentityColumn() { return _SERID; }
            		public @__api.schoolbase.entities.DBZiyuan.Entity.ZYK_Resource_Columns @__Alias(string aliasName) { return new @__api.schoolbase.entities.DBZiyuan.Entity.ZYK_Resource_Columns(aliasName); }
        }
    }
    [System.Serializable]
    public partial class ZYK_Resource
    {
        #region Property
    
        public virtual long SERID
        {
            get;
            set;
        }
    
        public virtual string SchSerID
        {
            get;
            set;
        }
    
        public virtual long UID
        {
            get;
            set;
        }
    
        public virtual System.DateTime Dtime
        {
            get { return _dtime; }
            set { 
    			if (value.Kind == DateTimeKind.Unspecified) {
    			_dtime = DateTime.SpecifyKind(value, DateTimeKind.Utc);
    			} else {
    				_dtime = value;
    			}
    			}
        }
        private System.DateTime _dtime;
    
        public virtual string FileID
        {
            get { return _fileID; }
            set
            {
                if (_fileID != value)
                {
                    if (ZYK_ResourceFile != null && ZYK_ResourceFile.FileID != value)
                    {
                        ZYK_ResourceFile = null;
                    }
                    _fileID = value;
                }
            }
        }
        private string _fileID;
    
        public virtual string ResType
        {
            get;
            set;
        }
    
        public virtual string FileType
        {
            get;
            set;
        }
    
        public virtual int FileSize
        {
            get;
            set;
        }
    
        public virtual string ResTitle
        {
            get;
            set;
        }
    
        public virtual string ResDes
        {
            get;
            set;
        }
    
        public virtual int NumView
        {
            get;
            set;
        }
    
        public virtual int NumUse
        {
            get;
            set;
        }
    
        public virtual int NumCollect
        {
            get;
            set;
        }
    
        public virtual int NumDownLoad
        {
            get;
            set;
        }
    
        public virtual int NumShare
        {
            get;
            set;
        }
    
        public virtual int NumScore
        {
            get;
            set;
        }
    
        public virtual int isPassed
        {
            get;
            set;
        }
    
        public virtual bool isDeleted
        {
            get;
            set;
        }
    
        public virtual Nullable<int> isPush
        {
            get;
            set;
        }
    
        public virtual int TotalScore
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual ZYK_ResourceFile ZYK_ResourceFile
        {
            get { return _zYK_ResourceFile; }
            set
            {
                if (!ReferenceEquals(_zYK_ResourceFile, value))
                {
                    var previousValue = _zYK_ResourceFile;
                    _zYK_ResourceFile = value;
                    FixupZYK_ResourceFile(previousValue);
                }
            }
        }
        private ZYK_ResourceFile _zYK_ResourceFile;
    
        public virtual ICollection<ZYK_ResourceCategory> ZYK_ResourceCategory
        {
            get
            {
                if (_zYK_ResourceCategory == null)
                {
                    var newCollection = new MyLib.DAO.FixupCollection<ZYK_ResourceCategory>();
                    newCollection.CollectionChanged += FixupZYK_ResourceCategory;
                    _zYK_ResourceCategory = newCollection;
                }
                return _zYK_ResourceCategory;
            }
            set
            {
                if (!ReferenceEquals(_zYK_ResourceCategory, value))
                {
                    var previousValue = _zYK_ResourceCategory as MyLib.DAO.FixupCollection<ZYK_ResourceCategory>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupZYK_ResourceCategory;
                    }
                    _zYK_ResourceCategory = value;
                    var newValue = value as MyLib.DAO.FixupCollection<ZYK_ResourceCategory>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupZYK_ResourceCategory;
                    }
                }
            }
        }
        private ICollection<ZYK_ResourceCategory> _zYK_ResourceCategory;
    
        public virtual ICollection<ZYK_ResourceSclass> ZYK_ResourceSclass
        {
            get
            {
                if (_zYK_ResourceSclass == null)
                {
                    var newCollection = new MyLib.DAO.FixupCollection<ZYK_ResourceSclass>();
                    newCollection.CollectionChanged += FixupZYK_ResourceSclass;
                    _zYK_ResourceSclass = newCollection;
                }
                return _zYK_ResourceSclass;
            }
            set
            {
                if (!ReferenceEquals(_zYK_ResourceSclass, value))
                {
                    var previousValue = _zYK_ResourceSclass as MyLib.DAO.FixupCollection<ZYK_ResourceSclass>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupZYK_ResourceSclass;
                    }
                    _zYK_ResourceSclass = value;
                    var newValue = value as MyLib.DAO.FixupCollection<ZYK_ResourceSclass>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupZYK_ResourceSclass;
                    }
                }
            }
        }
        private ICollection<ZYK_ResourceSclass> _zYK_ResourceSclass;
    
        public virtual ICollection<ZYK_ResourceSection> ZYK_ResourceSection
        {
            get
            {
                if (_zYK_ResourceSection == null)
                {
                    var newCollection = new MyLib.DAO.FixupCollection<ZYK_ResourceSection>();
                    newCollection.CollectionChanged += FixupZYK_ResourceSection;
                    _zYK_ResourceSection = newCollection;
                }
                return _zYK_ResourceSection;
            }
            set
            {
                if (!ReferenceEquals(_zYK_ResourceSection, value))
                {
                    var previousValue = _zYK_ResourceSection as MyLib.DAO.FixupCollection<ZYK_ResourceSection>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupZYK_ResourceSection;
                    }
                    _zYK_ResourceSection = value;
                    var newValue = value as MyLib.DAO.FixupCollection<ZYK_ResourceSection>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupZYK_ResourceSection;
                    }
                }
            }
        }
        private ICollection<ZYK_ResourceSection> _zYK_ResourceSection;

        #endregion

        #region Association Fixup
    
        private void FixupZYK_ResourceFile(ZYK_ResourceFile previousValue)
        {
            if (previousValue != null && previousValue.ZYK_Resource.Contains(this))
            {
                previousValue.ZYK_Resource.Remove(this);
            }
    
            if (ZYK_ResourceFile != null)
            {
                if (!ZYK_ResourceFile.ZYK_Resource.Contains(this))
                {
                    ZYK_ResourceFile.ZYK_Resource.Add(this);
                }
                if (FileID != ZYK_ResourceFile.FileID)
                {
                    FileID = ZYK_ResourceFile.FileID;
                }
            }
        }
    
        private void FixupZYK_ResourceCategory(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ZYK_ResourceCategory item in e.NewItems)
                {
                    item.ZYK_Resource = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ZYK_ResourceCategory item in e.OldItems)
                {
                    if (ReferenceEquals(item.ZYK_Resource, this))
                    {
                        item.ZYK_Resource = null;
                    }
                }
            }
        }
    
        private void FixupZYK_ResourceSclass(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ZYK_ResourceSclass item in e.NewItems)
                {
                    item.ZYK_Resource = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ZYK_ResourceSclass item in e.OldItems)
                {
                    if (ReferenceEquals(item.ZYK_Resource, this))
                    {
                        item.ZYK_Resource = null;
                    }
                }
            }
        }
    
        private void FixupZYK_ResourceSection(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ZYK_ResourceSection item in e.NewItems)
                {
                    item.ZYK_Resource = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ZYK_ResourceSection item in e.OldItems)
                {
                    if (ReferenceEquals(item.ZYK_Resource, this))
                    {
                        item.ZYK_Resource = null;
                    }
                }
            }
        }

        #endregion

    }
}
