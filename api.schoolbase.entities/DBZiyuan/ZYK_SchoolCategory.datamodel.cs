//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace api.schoolbase.entities.DBZiyuan
{
    
    public partial class _DBZiyuan
    {
        public static @__api.schoolbase.entities.DBZiyuan.Entity.ZYK_SchoolCategory_Columns ZYK_SchoolCategory = new @__api.schoolbase.entities.DBZiyuan.Entity.ZYK_SchoolCategory_Columns();
    }
    namespace @__api.schoolbase.entities.DBZiyuan.Entity
    {
        public class ZYK_SchoolCategory_Columns : MyLib.DbAccess.SQL.IQueryTable
        {
            private const string ___TABLE_NAME = "ZYK_SchoolCategory";
            private string ___aliasName;
            public ZYK_SchoolCategory_Columns(string aliasName) : base("DBZiyuan") { this.___aliasName = aliasName; }
            public ZYK_SchoolCategory_Columns() : base("DBZiyuan") { this.___aliasName = ___TABLE_NAME; }
    
        #region Table Columns
    
    		private static MyLib.DbAccess.SQL.QueryColumn _SERID = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".SERID"), DbType.Int64);
            public MyLib.DbAccess.SQL.QueryColumn SERID
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _SERID;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".SERID"), DbType.Int64);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _SchSerID = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".SchSerID"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn SchSerID
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _SchSerID;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".SchSerID"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _CategoryName = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".CategoryName"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn CategoryName
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _CategoryName;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".CategoryName"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _OrderNumber = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".OrderNumber"), DbType.Int32);
            public MyLib.DbAccess.SQL.QueryColumn OrderNumber
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _OrderNumber;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".OrderNumber"), DbType.Int32);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _Extensions = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".Extensions"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn Extensions
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _Extensions;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".Extensions"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _isAvail = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".isAvail"), DbType.Boolean);
            public MyLib.DbAccess.SQL.QueryColumn isAvail
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _isAvail;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".isAvail"), DbType.Boolean);
                }
            }

        #endregion

                
            public override string ___GetTableName() { return ___TABLE_NAME; }
    		public override string ___GetAliasName() { return ___aliasName ?? ___TABLE_NAME; }
    		        public override IEnumerable<MyLib.DbAccess.SQL.QueryColumn> ___GetAutoIncrementColumn() { return new MyLib.DbAccess.SQL.QueryColumn[]{_SERID}; }
    				        public override MyLib.DbAccess.SQL.QueryColumn ___GetIdentityColumn() { return _SERID; }
            		public @__api.schoolbase.entities.DBZiyuan.Entity.ZYK_SchoolCategory_Columns @__Alias(string aliasName) { return new @__api.schoolbase.entities.DBZiyuan.Entity.ZYK_SchoolCategory_Columns(aliasName); }
        }
    }
    [System.Serializable]
    public partial class ZYK_SchoolCategory
    {
        #region Property
    
        public virtual long SERID
        {
            get;
            set;
        }
    
        public virtual string SchSerID
        {
            get;
            set;
        }
    
        public virtual string CategoryName
        {
            get;
            set;
        }
    
        public virtual int OrderNumber
        {
            get;
            set;
        }
    
        public virtual string Extensions
        {
            get;
            set;
        }
    
        public virtual bool isAvail
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual ICollection<ZYK_ResourceCategory> ZYK_ResourceCategory
        {
            get
            {
                if (_zYK_ResourceCategory == null)
                {
                    var newCollection = new MyLib.DAO.FixupCollection<ZYK_ResourceCategory>();
                    newCollection.CollectionChanged += FixupZYK_ResourceCategory;
                    _zYK_ResourceCategory = newCollection;
                }
                return _zYK_ResourceCategory;
            }
            set
            {
                if (!ReferenceEquals(_zYK_ResourceCategory, value))
                {
                    var previousValue = _zYK_ResourceCategory as MyLib.DAO.FixupCollection<ZYK_ResourceCategory>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupZYK_ResourceCategory;
                    }
                    _zYK_ResourceCategory = value;
                    var newValue = value as MyLib.DAO.FixupCollection<ZYK_ResourceCategory>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupZYK_ResourceCategory;
                    }
                }
            }
        }
        private ICollection<ZYK_ResourceCategory> _zYK_ResourceCategory;

        #endregion

        #region Association Fixup
    
        private void FixupZYK_ResourceCategory(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ZYK_ResourceCategory item in e.NewItems)
                {
                    item.ZYK_SchoolCategory = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ZYK_ResourceCategory item in e.OldItems)
                {
                    if (ReferenceEquals(item.ZYK_SchoolCategory, this))
                    {
                        item.ZYK_SchoolCategory = null;
                    }
                }
            }
        }

        #endregion

    }
}
