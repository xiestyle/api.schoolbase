//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace api.schoolbase.entities.DBSchool
{
    
    public partial class _DBSchool
    {
        public static @__api.schoolbase.entities.DBSchool.Entity.IAM_SchSubject_Columns IAM_SchSubject = new @__api.schoolbase.entities.DBSchool.Entity.IAM_SchSubject_Columns();
    }
    namespace @__api.schoolbase.entities.DBSchool.Entity
    {
        public class IAM_SchSubject_Columns : MyLib.DbAccess.SQL.IQueryTable
        {
            private const string ___TABLE_NAME = "IAM_SchSubject";
            private string ___aliasName;
            public IAM_SchSubject_Columns(string aliasName) : base("DBSchool") { this.___aliasName = aliasName; }
            public IAM_SchSubject_Columns() : base("DBSchool") { this.___aliasName = ___TABLE_NAME; }
    
        #region Table Columns
    
    		private static MyLib.DbAccess.SQL.QueryColumn _SERID = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".SERID"), DbType.Int64);
            public MyLib.DbAccess.SQL.QueryColumn SERID
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _SERID;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".SERID"), DbType.Int64);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _SpecialtyID = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".SpecialtyID"), DbType.Int64);
            public MyLib.DbAccess.SQL.QueryColumn SpecialtyID
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _SpecialtyID;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".SpecialtyID"), DbType.Int64);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _SubjectName = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".SubjectName"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn SubjectName
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _SubjectName;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".SubjectName"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _SUBID = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".SUBID"), DbType.Int64);
            public MyLib.DbAccess.SQL.QueryColumn SUBID
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _SUBID;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".SUBID"), DbType.Int64);
                }
            }

        #endregion

                
            public override string ___GetTableName() { return ___TABLE_NAME; }
    		public override string ___GetAliasName() { return ___aliasName ?? ___TABLE_NAME; }
    		        public override IEnumerable<MyLib.DbAccess.SQL.QueryColumn> ___GetAutoIncrementColumn() { return new MyLib.DbAccess.SQL.QueryColumn[]{_SERID}; }
    				        public override MyLib.DbAccess.SQL.QueryColumn ___GetIdentityColumn() { return _SERID; }
            		public @__api.schoolbase.entities.DBSchool.Entity.IAM_SchSubject_Columns @__Alias(string aliasName) { return new @__api.schoolbase.entities.DBSchool.Entity.IAM_SchSubject_Columns(aliasName); }
        }
    }
    [System.Serializable]
    public partial class IAM_SchSubject
    {
        #region Property
    
        public virtual long SERID
        {
            get;
            set;
        }
    
        public virtual long SpecialtyID
        {
            get { return _specialtyID; }
            set
            {
                if (_specialtyID != value)
                {
                    if (IAM_SchSpecialty != null && IAM_SchSpecialty.SERID != value)
                    {
                        IAM_SchSpecialty = null;
                    }
                    _specialtyID = value;
                }
            }
        }
        private long _specialtyID;
    
        public virtual string SubjectName
        {
            get;
            set;
        }
    
        public virtual long SUBID
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual ICollection<IAM_GradeSubject> IAM_GradeSubject
        {
            get
            {
                if (_iAM_GradeSubject == null)
                {
                    var newCollection = new MyLib.DAO.FixupCollection<IAM_GradeSubject>();
                    newCollection.CollectionChanged += FixupIAM_GradeSubject;
                    _iAM_GradeSubject = newCollection;
                }
                return _iAM_GradeSubject;
            }
            set
            {
                if (!ReferenceEquals(_iAM_GradeSubject, value))
                {
                    var previousValue = _iAM_GradeSubject as MyLib.DAO.FixupCollection<IAM_GradeSubject>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupIAM_GradeSubject;
                    }
                    _iAM_GradeSubject = value;
                    var newValue = value as MyLib.DAO.FixupCollection<IAM_GradeSubject>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupIAM_GradeSubject;
                    }
                }
            }
        }
        private ICollection<IAM_GradeSubject> _iAM_GradeSubject;
    
        public virtual IAM_SchSpecialty IAM_SchSpecialty
        {
            get { return _iAM_SchSpecialty; }
            set
            {
                if (!ReferenceEquals(_iAM_SchSpecialty, value))
                {
                    var previousValue = _iAM_SchSpecialty;
                    _iAM_SchSpecialty = value;
                    FixupIAM_SchSpecialty(previousValue);
                }
            }
        }
        private IAM_SchSpecialty _iAM_SchSpecialty;
    
        public virtual ICollection<IAM_TeaSubject> IAM_TeaSubject
        {
            get
            {
                if (_iAM_TeaSubject == null)
                {
                    var newCollection = new MyLib.DAO.FixupCollection<IAM_TeaSubject>();
                    newCollection.CollectionChanged += FixupIAM_TeaSubject;
                    _iAM_TeaSubject = newCollection;
                }
                return _iAM_TeaSubject;
            }
            set
            {
                if (!ReferenceEquals(_iAM_TeaSubject, value))
                {
                    var previousValue = _iAM_TeaSubject as MyLib.DAO.FixupCollection<IAM_TeaSubject>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupIAM_TeaSubject;
                    }
                    _iAM_TeaSubject = value;
                    var newValue = value as MyLib.DAO.FixupCollection<IAM_TeaSubject>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupIAM_TeaSubject;
                    }
                }
            }
        }
        private ICollection<IAM_TeaSubject> _iAM_TeaSubject;

        #endregion

        #region Association Fixup
    
        private void FixupIAM_SchSpecialty(IAM_SchSpecialty previousValue)
        {
            if (previousValue != null && previousValue.IAM_SchSubject.Contains(this))
            {
                previousValue.IAM_SchSubject.Remove(this);
            }
    
            if (IAM_SchSpecialty != null)
            {
                if (!IAM_SchSpecialty.IAM_SchSubject.Contains(this))
                {
                    IAM_SchSpecialty.IAM_SchSubject.Add(this);
                }
                if (SpecialtyID != IAM_SchSpecialty.SERID)
                {
                    SpecialtyID = IAM_SchSpecialty.SERID;
                }
            }
        }
    
        private void FixupIAM_GradeSubject(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (IAM_GradeSubject item in e.NewItems)
                {
                    item.IAM_SchSubject = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (IAM_GradeSubject item in e.OldItems)
                {
                    if (ReferenceEquals(item.IAM_SchSubject, this))
                    {
                        item.IAM_SchSubject = null;
                    }
                }
            }
        }
    
        private void FixupIAM_TeaSubject(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (IAM_TeaSubject item in e.NewItems)
                {
                    item.IAM_SchSubject = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (IAM_TeaSubject item in e.OldItems)
                {
                    if (ReferenceEquals(item.IAM_SchSubject, this))
                    {
                        item.IAM_SchSubject = null;
                    }
                }
            }
        }

        #endregion

    }
}
