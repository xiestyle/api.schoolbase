//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace api.schoolbase.entities.DBUser
{
    
    public partial class _DBUser
    {
        public static @__api.schoolbase.entities.DBUser.Entity.tUser_Columns tUser = new @__api.schoolbase.entities.DBUser.Entity.tUser_Columns();
    }
    namespace @__api.schoolbase.entities.DBUser.Entity
    {
        public class tUser_Columns : MyLib.DbAccess.SQL.IQueryTable
        {
            private const string ___TABLE_NAME = "tUser";
            private string ___aliasName;
            public tUser_Columns(string aliasName) : base("DBUser") { this.___aliasName = aliasName; }
            public tUser_Columns() : base("DBUser") { this.___aliasName = ___TABLE_NAME; }
    
        #region Table Columns
    
    		private static MyLib.DbAccess.SQL.QueryColumn _user_id = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".user_id"), DbType.Int64);
            public MyLib.DbAccess.SQL.QueryColumn user_id
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _user_id;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".user_id"), DbType.Int64);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _email = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".email"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn email
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _email;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".email"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _pwd = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".pwd"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn pwd
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _pwd;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".pwd"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _fullname = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".fullname"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn fullname
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _fullname;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".fullname"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _personmsg = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".personmsg"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn personmsg
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _personmsg;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".personmsg"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _moreinfo = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".moreinfo"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn moreinfo
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _moreinfo;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".moreinfo"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _flags = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".flags"), DbType.Int32);
            public MyLib.DbAccess.SQL.QueryColumn flags
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _flags;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".flags"), DbType.Int32);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _roles = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".roles"), DbType.Int32);
            public MyLib.DbAccess.SQL.QueryColumn roles
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _roles;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".roles"), DbType.Int32);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _status = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".status"), DbType.Int16);
            public MyLib.DbAccess.SQL.QueryColumn status
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _status;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".status"), DbType.Int16);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _create_time = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".create_time"), DbType.DateTime);
            public MyLib.DbAccess.SQL.QueryColumn create_time
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _create_time;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".create_time"), DbType.DateTime);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _online = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".online"), DbType.Boolean);
            public MyLib.DbAccess.SQL.QueryColumn online
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _online;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".online"), DbType.Boolean);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _msgrsvr_id = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".msgrsvr_id"), DbType.Int32);
            public MyLib.DbAccess.SQL.QueryColumn msgrsvr_id
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _msgrsvr_id;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".msgrsvr_id"), DbType.Int32);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _entry_addr = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".entry_addr"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn entry_addr
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _entry_addr;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".entry_addr"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _net_power = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".net_power"), DbType.Int16);
            public MyLib.DbAccess.SQL.QueryColumn net_power
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _net_power;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".net_power"), DbType.Int16);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _login_time = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".login_time"), DbType.DateTime);
            public MyLib.DbAccess.SQL.QueryColumn login_time
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _login_time;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".login_time"), DbType.DateTime);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _logout_time = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".logout_time"), DbType.DateTime);
            public MyLib.DbAccess.SQL.QueryColumn logout_time
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _logout_time;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".logout_time"), DbType.DateTime);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _pwd_plain = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".pwd_plain"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn pwd_plain
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _pwd_plain;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".pwd_plain"), DbType.String);
                }
            }

        #endregion

                
            public override string ___GetTableName() { return ___TABLE_NAME; }
    		public override string ___GetAliasName() { return ___aliasName ?? ___TABLE_NAME; }
    		        public override IEnumerable<MyLib.DbAccess.SQL.QueryColumn> ___GetAutoIncrementColumn() { return new MyLib.DbAccess.SQL.QueryColumn[]{_user_id}; }
    				        public override MyLib.DbAccess.SQL.QueryColumn ___GetIdentityColumn() { return _user_id; }
            		public @__api.schoolbase.entities.DBUser.Entity.tUser_Columns @__Alias(string aliasName) { return new @__api.schoolbase.entities.DBUser.Entity.tUser_Columns(aliasName); }
        }
    }
    [System.Serializable]
    public partial class tUser
    {
        #region Property
    
        public virtual long user_id
        {
            get;
            set;
        }
    
        public virtual string email
        {
            get;
            set;
        }
    
        public virtual string pwd
        {
            get;
            set;
        }
    
        public virtual string fullname
        {
            get;
            set;
        }
    
        public virtual string personmsg
        {
            get;
            set;
        }
    
        public virtual string moreinfo
        {
            get;
            set;
        }
    
        public virtual int flags
        {
            get;
            set;
        }
    
        public virtual int roles
        {
            get;
            set;
        }
    
        public virtual short status
        {
            get;
            set;
        }
    
        public virtual System.DateTime create_time
        {
            get { return _create_time; }
            set { 
    			if (value.Kind == DateTimeKind.Unspecified) {
    			_create_time = DateTime.SpecifyKind(value, DateTimeKind.Utc);
    			} else {
    				_create_time = value;
    			}
    			}
        }
        private System.DateTime _create_time;
    
        public virtual bool online
        {
            get;
            set;
        }
    
        public virtual int msgrsvr_id
        {
            get;
            set;
        }
    
        public virtual string entry_addr
        {
            get;
            set;
        }
    
        public virtual short net_power
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> login_time
        {
            get { return _login_time; }
            set { 
    			if (value != null){
    				if (value.Value.Kind == DateTimeKind.Unspecified) {
    					_login_time = DateTime.SpecifyKind(value.Value, DateTimeKind.Utc);
    				} else {
    					_login_time = value;
    				}
    			}
    			else 		_login_time = value; 
    	}
        }
        private Nullable<System.DateTime> _login_time;
    
        public virtual Nullable<System.DateTime> logout_time
        {
            get { return _logout_time; }
            set { 
    			if (value != null){
    				if (value.Value.Kind == DateTimeKind.Unspecified) {
    					_logout_time = DateTime.SpecifyKind(value.Value, DateTimeKind.Utc);
    				} else {
    					_logout_time = value;
    				}
    			}
    			else 		_logout_time = value; 
    	}
        }
        private Nullable<System.DateTime> _logout_time;
    
        public virtual string pwd_plain
        {
            get;
            set;
        }

        #endregion

    }
}
