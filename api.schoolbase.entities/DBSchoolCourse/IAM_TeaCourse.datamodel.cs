//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace api.schoolbase.entities.DBSchoolCourse
{
    
    public partial class _DBSchoolCourse
    {
        public static @__api.schoolbase.entities.DBSchoolCourse.Entity.IAM_TeaCourse_Columns IAM_TeaCourse = new @__api.schoolbase.entities.DBSchoolCourse.Entity.IAM_TeaCourse_Columns();
    }
    namespace @__api.schoolbase.entities.DBSchoolCourse.Entity
    {
        public class IAM_TeaCourse_Columns : MyLib.DbAccess.SQL.IQueryTable
        {
            private const string ___TABLE_NAME = "IAM_TeaCourse";
            private string ___aliasName;
            public IAM_TeaCourse_Columns(string aliasName) : base("DBSchoolCourse") { this.___aliasName = aliasName; }
            public IAM_TeaCourse_Columns() : base("DBSchoolCourse") { this.___aliasName = ___TABLE_NAME; }
    
        #region Table Columns
    
    		private static MyLib.DbAccess.SQL.QueryColumn _SerID = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".SerID"), DbType.Int64);
            public MyLib.DbAccess.SQL.QueryColumn SerID
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _SerID;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".SerID"), DbType.Int64);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _SchSerID = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".SchSerID"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn SchSerID
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _SchSerID;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".SchSerID"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _SchYear = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".SchYear"), DbType.Int32);
            public MyLib.DbAccess.SQL.QueryColumn SchYear
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _SchYear;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".SchYear"), DbType.Int32);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _SchTerm = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".SchTerm"), DbType.Byte);
            public MyLib.DbAccess.SQL.QueryColumn SchTerm
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _SchTerm;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".SchTerm"), DbType.Byte);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _TeaSerID = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".TeaSerID"), DbType.Int64);
            public MyLib.DbAccess.SQL.QueryColumn TeaSerID
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _TeaSerID;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".TeaSerID"), DbType.Int64);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _GRAID = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".GRAID"), DbType.Int64);
            public MyLib.DbAccess.SQL.QueryColumn GRAID
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _GRAID;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".GRAID"), DbType.Int64);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _SubjectID = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".SubjectID"), DbType.Int64);
            public MyLib.DbAccess.SQL.QueryColumn SubjectID
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _SubjectID;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".SubjectID"), DbType.Int64);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _Max = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".Max"), DbType.Int32);
            public MyLib.DbAccess.SQL.QueryColumn Max
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _Max;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".Max"), DbType.Int32);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _LoopType = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".LoopType"), DbType.Int64);
            public MyLib.DbAccess.SQL.QueryColumn LoopType
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _LoopType;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".LoopType"), DbType.Int64);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _RequiredTime = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".RequiredTime"), DbType.Int32);
            public MyLib.DbAccess.SQL.QueryColumn RequiredTime
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _RequiredTime;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".RequiredTime"), DbType.Int32);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _Score = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".Score"), DbType.Int32);
            public MyLib.DbAccess.SQL.QueryColumn Score
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _Score;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".Score"), DbType.Int32);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _DTime = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".DTime"), DbType.DateTime);
            public MyLib.DbAccess.SQL.QueryColumn DTime
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _DTime;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".DTime"), DbType.DateTime);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _Status = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".Status"), DbType.Int64);
            public MyLib.DbAccess.SQL.QueryColumn Status
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _Status;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".Status"), DbType.Int64);
                }
            }

        #endregion

                
            public override string ___GetTableName() { return ___TABLE_NAME; }
    		public override string ___GetAliasName() { return ___aliasName ?? ___TABLE_NAME; }
    		        public override IEnumerable<MyLib.DbAccess.SQL.QueryColumn> ___GetAutoIncrementColumn() { return new MyLib.DbAccess.SQL.QueryColumn[]{_SerID}; }
    				        public override MyLib.DbAccess.SQL.QueryColumn ___GetIdentityColumn() { return _SerID; }
            		public @__api.schoolbase.entities.DBSchoolCourse.Entity.IAM_TeaCourse_Columns @__Alias(string aliasName) { return new @__api.schoolbase.entities.DBSchoolCourse.Entity.IAM_TeaCourse_Columns(aliasName); }
        }
    }
    [System.Serializable]
    public partial class IAM_TeaCourse
    {
        #region Property
    
        public virtual long SerID
        {
            get;
            set;
        }
    
        public virtual string SchSerID
        {
            get;
            set;
        }
    
        public virtual int SchYear
        {
            get;
            set;
        }
    
        public virtual byte SchTerm
        {
            get;
            set;
        }
    
        public virtual long TeaSerID
        {
            get;
            set;
        }
    
        public virtual long GRAID
        {
            get;
            set;
        }
    
        public virtual long SubjectID
        {
            get;
            set;
        }
    
        public virtual int Max
        {
            get;
            set;
        }
    
        public virtual long LoopType
        {
            get;
            set;
        }
    
        public virtual int RequiredTime
        {
            get;
            set;
        }
    
        public virtual int Score
        {
            get;
            set;
        }
    
        public virtual System.DateTime DTime
        {
            get { return _dTime; }
            set { 
    			if (value.Kind == DateTimeKind.Unspecified) {
    			_dTime = DateTime.SpecifyKind(value, DateTimeKind.Utc);
    			} else {
    				_dTime = value;
    			}
    			}
        }
        private System.DateTime _dTime;
    
        public virtual long Status
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual ICollection<IAM_StuSelectedCourse> IAM_StuSelectedCourse
        {
            get
            {
                if (_iAM_StuSelectedCourse == null)
                {
                    var newCollection = new MyLib.DAO.FixupCollection<IAM_StuSelectedCourse>();
                    newCollection.CollectionChanged += FixupIAM_StuSelectedCourse;
                    _iAM_StuSelectedCourse = newCollection;
                }
                return _iAM_StuSelectedCourse;
            }
            set
            {
                if (!ReferenceEquals(_iAM_StuSelectedCourse, value))
                {
                    var previousValue = _iAM_StuSelectedCourse as MyLib.DAO.FixupCollection<IAM_StuSelectedCourse>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupIAM_StuSelectedCourse;
                    }
                    _iAM_StuSelectedCourse = value;
                    var newValue = value as MyLib.DAO.FixupCollection<IAM_StuSelectedCourse>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupIAM_StuSelectedCourse;
                    }
                }
            }
        }
        private ICollection<IAM_StuSelectedCourse> _iAM_StuSelectedCourse;
    
        public virtual ICollection<IAM_TeaCourseClass> IAM_TeaCourseClass
        {
            get
            {
                if (_iAM_TeaCourseClass == null)
                {
                    var newCollection = new MyLib.DAO.FixupCollection<IAM_TeaCourseClass>();
                    newCollection.CollectionChanged += FixupIAM_TeaCourseClass;
                    _iAM_TeaCourseClass = newCollection;
                }
                return _iAM_TeaCourseClass;
            }
            set
            {
                if (!ReferenceEquals(_iAM_TeaCourseClass, value))
                {
                    var previousValue = _iAM_TeaCourseClass as MyLib.DAO.FixupCollection<IAM_TeaCourseClass>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupIAM_TeaCourseClass;
                    }
                    _iAM_TeaCourseClass = value;
                    var newValue = value as MyLib.DAO.FixupCollection<IAM_TeaCourseClass>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupIAM_TeaCourseClass;
                    }
                }
            }
        }
        private ICollection<IAM_TeaCourseClass> _iAM_TeaCourseClass;

        #endregion

        #region Association Fixup
    
        private void FixupIAM_StuSelectedCourse(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (IAM_StuSelectedCourse item in e.NewItems)
                {
                    item.IAM_TeaCourse = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (IAM_StuSelectedCourse item in e.OldItems)
                {
                    if (ReferenceEquals(item.IAM_TeaCourse, this))
                    {
                        item.IAM_TeaCourse = null;
                    }
                }
            }
        }
    
        private void FixupIAM_TeaCourseClass(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (IAM_TeaCourseClass item in e.NewItems)
                {
                    item.IAM_TeaCourse = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (IAM_TeaCourseClass item in e.OldItems)
                {
                    if (ReferenceEquals(item.IAM_TeaCourse, this))
                    {
                        item.IAM_TeaCourse = null;
                    }
                }
            }
        }

        #endregion

    }
}
