//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace api.schoolbase.entities.DBSyllabus
{
    
    public partial class _DBSyllabus
    {
        public static @__api.schoolbase.entities.DBSyllabus.Entity.vsclass_Columns vsclass = new @__api.schoolbase.entities.DBSyllabus.Entity.vsclass_Columns();
    }
    namespace @__api.schoolbase.entities.DBSyllabus.Entity
    {
        public class vsclass_Columns : MyLib.DbAccess.SQL.IQueryTable
        {
            private const string ___TABLE_NAME = "vsclass";
            private string ___aliasName;
            public vsclass_Columns(string aliasName) : base("DBSyllabus") { this.___aliasName = aliasName; }
            public vsclass_Columns() : base("DBSyllabus") { this.___aliasName = ___TABLE_NAME; }
    
        #region Table Columns
    
    		private static MyLib.DbAccess.SQL.QueryColumn _SchSerID = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".SchSerID"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn SchSerID
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _SchSerID;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".SchSerID"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _SpecName = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".SpecName"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn SpecName
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _SpecName;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".SpecName"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _SPEID = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".SPEID"), DbType.Int64);
            public MyLib.DbAccess.SQL.QueryColumn SPEID
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _SPEID;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".SPEID"), DbType.Int64);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _GRAID = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".GRAID"), DbType.Int64);
            public MyLib.DbAccess.SQL.QueryColumn GRAID
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _GRAID;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".GRAID"), DbType.Int64);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _SubjectID = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".SubjectID"), DbType.Int64);
            public MyLib.DbAccess.SQL.QueryColumn SubjectID
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _SubjectID;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".SubjectID"), DbType.Int64);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _SubjectName = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".SubjectName"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn SubjectName
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _SubjectName;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".SubjectName"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _SUBID = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".SUBID"), DbType.Int64);
            public MyLib.DbAccess.SQL.QueryColumn SUBID
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _SUBID;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".SUBID"), DbType.Int64);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _SERID = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".SERID"), DbType.Int64);
            public MyLib.DbAccess.SQL.QueryColumn SERID
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _SERID;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".SERID"), DbType.Int64);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _PID = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".PID"), DbType.Int64);
            public MyLib.DbAccess.SQL.QueryColumn PID
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _PID;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".PID"), DbType.Int64);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _Sname = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".Sname"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn Sname
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _Sname;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".Sname"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _Sorder = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".Sorder"), DbType.Int32);
            public MyLib.DbAccess.SQL.QueryColumn Sorder
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _Sorder;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".Sorder"), DbType.Int32);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _Depth = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".Depth"), DbType.Int32);
            public MyLib.DbAccess.SQL.QueryColumn Depth
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _Depth;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".Depth"), DbType.Int32);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _NodePath = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".NodePath"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn NodePath
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _NodePath;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".NodePath"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _FullCnPath = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".FullCnPath"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn FullCnPath
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _FullCnPath;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".FullCnPath"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _isDeleted = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".isDeleted"), DbType.Boolean);
            public MyLib.DbAccess.SQL.QueryColumn isDeleted
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _isDeleted;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".isDeleted"), DbType.Boolean);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _SpecialtyID = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".SpecialtyID"), DbType.Int64);
            public MyLib.DbAccess.SQL.QueryColumn SpecialtyID
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _SpecialtyID;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".SpecialtyID"), DbType.Int64);
                }
            }

        #endregion

                
            public override string ___GetTableName() { return ___TABLE_NAME; }
    		public override string ___GetAliasName() { return ___aliasName ?? ___TABLE_NAME; }
    		        public override IEnumerable<MyLib.DbAccess.SQL.QueryColumn> ___GetAutoIncrementColumn() { return new MyLib.DbAccess.SQL.QueryColumn[]{_SERID}; }
    				        public override MyLib.DbAccess.SQL.QueryColumn ___GetIdentityColumn() { return _SchSerID; }
            		public @__api.schoolbase.entities.DBSyllabus.Entity.vsclass_Columns @__Alias(string aliasName) { return new @__api.schoolbase.entities.DBSyllabus.Entity.vsclass_Columns(aliasName); }
        }
    }
    [System.Serializable]
    public partial class vsclass
    {
        #region Property
    
        public virtual string SchSerID
        {
            get;
            set;
        }
    
        public virtual string SpecName
        {
            get;
            set;
        }
    
        public virtual long SPEID
        {
            get;
            set;
        }
    
        public virtual long GRAID
        {
            get;
            set;
        }
    
        public virtual long SubjectID
        {
            get;
            set;
        }
    
        public virtual string SubjectName
        {
            get;
            set;
        }
    
        public virtual long SUBID
        {
            get;
            set;
        }
    
        public virtual long SERID
        {
            get;
            set;
        }
    
        public virtual long PID
        {
            get;
            set;
        }
    
        public virtual string Sname
        {
            get;
            set;
        }
    
        public virtual int Sorder
        {
            get;
            set;
        }
    
        public virtual int Depth
        {
            get;
            set;
        }
    
        public virtual string NodePath
        {
            get;
            set;
        }
    
        public virtual string FullCnPath
        {
            get;
            set;
        }
    
        public virtual bool isDeleted
        {
            get;
            set;
        }
    
        public virtual long SpecialtyID
        {
            get;
            set;
        }

        #endregion

    }
}
