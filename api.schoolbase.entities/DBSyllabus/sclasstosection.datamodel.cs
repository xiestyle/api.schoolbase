//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace api.schoolbase.entities.DBSyllabus
{
    
    public partial class _DBSyllabus
    {
        public static @__api.schoolbase.entities.DBSyllabus.Entity.sclasstosection_Columns sclasstosection = new @__api.schoolbase.entities.DBSyllabus.Entity.sclasstosection_Columns();
    }
    namespace @__api.schoolbase.entities.DBSyllabus.Entity
    {
        public class sclasstosection_Columns : MyLib.DbAccess.SQL.IQueryTable
        {
            private const string ___TABLE_NAME = "sclasstosection";
            private string ___aliasName;
            public sclasstosection_Columns(string aliasName) : base("DBSyllabus") { this.___aliasName = aliasName; }
            public sclasstosection_Columns() : base("DBSyllabus") { this.___aliasName = ___TABLE_NAME; }
    
        #region Table Columns
    
    		private static MyLib.DbAccess.SQL.QueryColumn _sclassid = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".sclassid"), DbType.Int64);
            public MyLib.DbAccess.SQL.QueryColumn sclassid
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _sclassid;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".sclassid"), DbType.Int64);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _sectionid = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".sectionid"), DbType.Int32);
            public MyLib.DbAccess.SQL.QueryColumn sectionid
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _sectionid;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".sectionid"), DbType.Int32);
                }
            }

        #endregion

                
            public override string ___GetTableName() { return ___TABLE_NAME; }
    		public override string ___GetAliasName() { return ___aliasName ?? ___TABLE_NAME; }
    				        public override MyLib.DbAccess.SQL.QueryColumn ___GetIdentityColumn() { return _sclassid; }
            		public @__api.schoolbase.entities.DBSyllabus.Entity.sclasstosection_Columns @__Alias(string aliasName) { return new @__api.schoolbase.entities.DBSyllabus.Entity.sclasstosection_Columns(aliasName); }
        }
    }
    [System.Serializable]
    public partial class sclasstosection
    {
        #region Property
    
        public virtual long sclassid
        {
            get;
            set;
        }
    
        public virtual int sectionid
        {
            get { return _sectionid; }
            set
            {
                if (_sectionid != value)
                {
                    if (sections != null && sections.sectionid != value)
                    {
                        sections = null;
                    }
                    _sectionid = value;
                }
            }
        }
        private int _sectionid;

        #endregion

        #region Navigation Properties
    
        public virtual sections sections
        {
            get { return _sections; }
            set
            {
                if (!ReferenceEquals(_sections, value))
                {
                    var previousValue = _sections;
                    _sections = value;
                    Fixupsections(previousValue);
                }
            }
        }
        private sections _sections;

        #endregion

        #region Association Fixup
    
        private void Fixupsections(sections previousValue)
        {
            if (previousValue != null && previousValue.sclasstosection.Contains(this))
            {
                previousValue.sclasstosection.Remove(this);
            }
    
            if (sections != null)
            {
                if (!sections.sclasstosection.Contains(this))
                {
                    sections.sclasstosection.Add(this);
                }
                if (sectionid != sections.sectionid)
                {
                    sectionid = sections.sectionid;
                }
            }
        }

        #endregion

    }
}
