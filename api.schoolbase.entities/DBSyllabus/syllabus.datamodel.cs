//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace api.schoolbase.entities.DBSyllabus
{
    
    public partial class _DBSyllabus
    {
        public static @__api.schoolbase.entities.DBSyllabus.Entity.syllabus_Columns syllabus = new @__api.schoolbase.entities.DBSyllabus.Entity.syllabus_Columns();
    }
    namespace @__api.schoolbase.entities.DBSyllabus.Entity
    {
        public class syllabus_Columns : MyLib.DbAccess.SQL.IQueryTable
        {
            private const string ___TABLE_NAME = "syllabus";
            private string ___aliasName;
            public syllabus_Columns(string aliasName) : base("DBSyllabus") { this.___aliasName = aliasName; }
            public syllabus_Columns() : base("DBSyllabus") { this.___aliasName = ___TABLE_NAME; }
    
        #region Table Columns
    
    		private static MyLib.DbAccess.SQL.QueryColumn _syllabusid = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".syllabusid"), DbType.Int32);
            public MyLib.DbAccess.SQL.QueryColumn syllabusid
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _syllabusid;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".syllabusid"), DbType.Int32);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _syllabusname = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".syllabusname"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn syllabusname
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _syllabusname;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".syllabusname"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _area = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".area"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn area
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _area;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".area"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _active = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".active"), DbType.Boolean);
            public MyLib.DbAccess.SQL.QueryColumn active
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _active;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".active"), DbType.Boolean);
                }
            }

        #endregion

                
            public override string ___GetTableName() { return ___TABLE_NAME; }
    		public override string ___GetAliasName() { return ___aliasName ?? ___TABLE_NAME; }
    		        public override IEnumerable<MyLib.DbAccess.SQL.QueryColumn> ___GetAutoIncrementColumn() { return new MyLib.DbAccess.SQL.QueryColumn[]{_syllabusid}; }
    				        public override MyLib.DbAccess.SQL.QueryColumn ___GetIdentityColumn() { return _syllabusid; }
            		public @__api.schoolbase.entities.DBSyllabus.Entity.syllabus_Columns @__Alias(string aliasName) { return new @__api.schoolbase.entities.DBSyllabus.Entity.syllabus_Columns(aliasName); }
        }
    }
    [System.Serializable]
    public partial class syllabus
    {
        #region Property
    
        public virtual int syllabusid
        {
            get;
            set;
        }
    
        public virtual string syllabusname
        {
            get;
            set;
        }
    
        public virtual string area
        {
            get { return _area; }
            set
            {
                if (_area != value)
                {
                    if (area1 != null && area1.id != value)
                    {
                        area1 = null;
                    }
                    _area = value;
                }
            }
        }
        private string _area;
    
        public virtual bool active
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual area area1
        {
            get { return _area1; }
            set
            {
                if (!ReferenceEquals(_area1, value))
                {
                    var previousValue = _area1;
                    _area1 = value;
                    Fixuparea1(previousValue);
                }
            }
        }
        private area _area1;
    
        public virtual ICollection<syllabussubject> syllabussubject
        {
            get
            {
                if (_syllabussubject == null)
                {
                    var newCollection = new MyLib.DAO.FixupCollection<syllabussubject>();
                    newCollection.CollectionChanged += Fixupsyllabussubject;
                    _syllabussubject = newCollection;
                }
                return _syllabussubject;
            }
            set
            {
                if (!ReferenceEquals(_syllabussubject, value))
                {
                    var previousValue = _syllabussubject as MyLib.DAO.FixupCollection<syllabussubject>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupsyllabussubject;
                    }
                    _syllabussubject = value;
                    var newValue = value as MyLib.DAO.FixupCollection<syllabussubject>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupsyllabussubject;
                    }
                }
            }
        }
        private ICollection<syllabussubject> _syllabussubject;

        #endregion

        #region Association Fixup
    
        private void Fixuparea1(area previousValue)
        {
            if (previousValue != null && previousValue.syllabus.Contains(this))
            {
                previousValue.syllabus.Remove(this);
            }
    
            if (area1 != null)
            {
                if (!area1.syllabus.Contains(this))
                {
                    area1.syllabus.Add(this);
                }
                if (area != area1.id)
                {
                    area = area1.id;
                }
            }
        }
    
        private void Fixupsyllabussubject(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (syllabussubject item in e.NewItems)
                {
                    item.syllabus = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (syllabussubject item in e.OldItems)
                {
                    if (ReferenceEquals(item.syllabus, this))
                    {
                        item.syllabus = null;
                    }
                }
            }
        }

        #endregion

    }
}
