//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace api.schoolbase.entities.DBSyllabus
{
    
    public partial class _DBSyllabus
    {
        public static @__api.schoolbase.entities.DBSyllabus.Entity.subjects_Columns subjects = new @__api.schoolbase.entities.DBSyllabus.Entity.subjects_Columns();
    }
    namespace @__api.schoolbase.entities.DBSyllabus.Entity
    {
        public class subjects_Columns : MyLib.DbAccess.SQL.IQueryTable
        {
            private const string ___TABLE_NAME = "subjects";
            private string ___aliasName;
            public subjects_Columns(string aliasName) : base("DBSyllabus") { this.___aliasName = aliasName; }
            public subjects_Columns() : base("DBSyllabus") { this.___aliasName = ___TABLE_NAME; }
    
        #region Table Columns
    
    		private static MyLib.DbAccess.SQL.QueryColumn _subjectid = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".subjectid"), DbType.Int64);
            public MyLib.DbAccess.SQL.QueryColumn subjectid
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _subjectid;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".subjectid"), DbType.Int64);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _subject = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".subject"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn subject
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _subject;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".subject"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _subjectname = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".subjectname"), DbType.String);
            public MyLib.DbAccess.SQL.QueryColumn subjectname
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _subjectname;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".subjectname"), DbType.String);
                }
            }
    
    		private static MyLib.DbAccess.SQL.QueryColumn _line = new MyLib.DbAccess.SQL.QueryColumn((___TABLE_NAME + ".line"), DbType.Int16);
            public MyLib.DbAccess.SQL.QueryColumn line
            {
                get
                {
                    if ((this.___aliasName == ___TABLE_NAME)) return _line;
                    else return new MyLib.DbAccess.SQL.QueryColumn((this.___aliasName + ".line"), DbType.Int16);
                }
            }

        #endregion

                
            public override string ___GetTableName() { return ___TABLE_NAME; }
    		public override string ___GetAliasName() { return ___aliasName ?? ___TABLE_NAME; }
    				        public override MyLib.DbAccess.SQL.QueryColumn ___GetIdentityColumn() { return _subjectid; }
            		public @__api.schoolbase.entities.DBSyllabus.Entity.subjects_Columns @__Alias(string aliasName) { return new @__api.schoolbase.entities.DBSyllabus.Entity.subjects_Columns(aliasName); }
        }
    }
    [System.Serializable]
    public partial class subjects
    {
        #region Property
    
        public virtual long subjectid
        {
            get;
            set;
        }
    
        public virtual string subject
        {
            get;
            set;
        }
    
        public virtual string subjectname
        {
            get;
            set;
        }
    
        public virtual short line
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual ICollection<chapters> chapters
        {
            get
            {
                if (_chapters == null)
                {
                    var newCollection = new MyLib.DAO.FixupCollection<chapters>();
                    newCollection.CollectionChanged += Fixupchapters;
                    _chapters = newCollection;
                }
                return _chapters;
            }
            set
            {
                if (!ReferenceEquals(_chapters, value))
                {
                    var previousValue = _chapters as MyLib.DAO.FixupCollection<chapters>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupchapters;
                    }
                    _chapters = value;
                    var newValue = value as MyLib.DAO.FixupCollection<chapters>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupchapters;
                    }
                }
            }
        }
        private ICollection<chapters> _chapters;
    
        public virtual ICollection<syllabussubject> syllabussubject
        {
            get
            {
                if (_syllabussubject == null)
                {
                    var newCollection = new MyLib.DAO.FixupCollection<syllabussubject>();
                    newCollection.CollectionChanged += Fixupsyllabussubject;
                    _syllabussubject = newCollection;
                }
                return _syllabussubject;
            }
            set
            {
                if (!ReferenceEquals(_syllabussubject, value))
                {
                    var previousValue = _syllabussubject as MyLib.DAO.FixupCollection<syllabussubject>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupsyllabussubject;
                    }
                    _syllabussubject = value;
                    var newValue = value as MyLib.DAO.FixupCollection<syllabussubject>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupsyllabussubject;
                    }
                }
            }
        }
        private ICollection<syllabussubject> _syllabussubject;

        #endregion

        #region Association Fixup
    
        private void Fixupchapters(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (chapters item in e.NewItems)
                {
                    item.subjects = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (chapters item in e.OldItems)
                {
                    if (ReferenceEquals(item.subjects, this))
                    {
                        item.subjects = null;
                    }
                }
            }
        }
    
        private void Fixupsyllabussubject(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (syllabussubject item in e.NewItems)
                {
                    item.subjects = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (syllabussubject item in e.OldItems)
                {
                    if (ReferenceEquals(item.subjects, this))
                    {
                        item.subjects = null;
                    }
                }
            }
        }

        #endregion

    }
}
